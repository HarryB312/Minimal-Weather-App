{"ast":null,"code":"var _jsxFileName = \"/Users/harryb/Desktop/PROGRAMMING/weather-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: `b7dea0749e34131fab7f854992d8b946`,\n  base: `https://api.openweathermap.org/data/2.5/`\n};\nexport default function App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState([]);\n  const search = e => {\n    if (e.key === 'Enter') fetch(`${api.base}weather?q=${query}&units=imperial&appid=${api.key}`).then(response => response.json()).then(result => {\n      setQuery('');\n      setWeather(result);\n    });\n  };\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City Here\",\n        className: \"search-box\",\n        onChange: e => setQuery(e.target.value),\n        value: query,\n        onKeyDown: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [weather.name, \", \", weather.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: dateBuilder(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: \"53\\xB0f\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather\",\n        children: \"Sunny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"do/N4l2WGCZvxXybR4LVsokvZ1E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","api","key","base","App","_s","query","setQuery","weather","setWeather","search","e","fetch","then","response","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","children","className","type","placeholder","onChange","target","value","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","name","sys","country","Date","_c","$RefreshReg$"],"sources":["/Users/harryb/Desktop/PROGRAMMING/weather-app/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst api = {\n  key: `b7dea0749e34131fab7f854992d8b946`,\n  base: `https://api.openweathermap.org/data/2.5/`\n\n}\n\nexport default function App (){\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState([])\n\n  const search = e => {\n    if (e.key === 'Enter')\n    fetch (`${api.base}weather?q=${query}&units=imperial&appid=${api.key}`)\n    .then(response => response.json())\n    .then(result => {\n      setQuery('')\n      setWeather(result)})\n  }\n  \n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  \n  return (    \n    <>\n     <div className=\"search-container\">\n      <input \n        type=\"text\" \n        placeholder=\"Enter City Here\"\n        className=\"search-box\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        onKeyDown={search}\n        />\n     </div>\n      <div className=\"location-box\">\n        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n        <div className=\"date\">{dateBuilder(new Date ())}</div>\n      </div>\n      <div className=\"weather-box\">\n        <div className=\"temp\">\n          53Â°f\n        </div>\n        <div className=\"weather\">Sunny</div>\n      </div>\n    </>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}